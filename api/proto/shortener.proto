syntax = "proto3";

package shortener_grpc;

option go_package = ".";


// регистрация пользователя

// UserRegisterRequest запрос на регистрацию пользователя
message UserRegisterRequest {
  string Login = 1; // имя пользователя
  string Secret = 2; // пароль
}

// UserRegisterResponse результат регистрации пользователя
message UserRegisterResponse {
  string Token = 1; // токен верификации для подстановки в запросы
}


//------------- авторизация пользователя-----------------------------
// UserAuthRequest запрос на верификацию пользователя
message UserAuthRequest {
  string Login = 1; // логин клиента
  string Secret = 2; // пароль
}

// UserAuthResponse результат верификации пользователя
message UserAuthResponse {
  string Token = 1; // токен верификации для подстановки в запросы
}

//-------------- сокращение одной ссылки ----------------------------
// EncodeLinkRequest запрос на получение сокращенной ссылки для одного адреса
message EncodeLinkRequest {
  string OriginalUrl = 1; // исходная ссылка для сокращения
}

// EncodeLinkResponse ответ с результатом получения ссылки для одного адреса
message EncodeLinkResponse {
  string ShortLink = 1; // короткая ссылка для полученного адреса
}

//---------------- сокращение пакета ссылок --------------------------
// EncodeBatchLinksRequest запрос на пакетное сокращение ссылок
message EncodeBatchLinksRequest {
  repeated EncodeBatchLinksRequestEntity Links = 1; // массив с данными для сокращения
}

// EncodeBatchLinksEntity данные одной ссылки в пакетном запросе на сокращение
message EncodeBatchLinksRequestEntity {
  string CorrelationID = 1; // идентификатор ссылки
  string OriginalURL = 2; // оригинальный url
}

// EncodeBatchLinksResponse ответ с результатом пакетного сокращения ссылок
message EncodeBatchLinksResponse {
  repeated EncodeBatchLinksResponseEntity Link = 1; // массив с результатом сокращения ссылок
}

// EncodeBatchLinksResponseEntity данные по одной ссылке в ответе на пакетное сокращение
message EncodeBatchLinksResponseEntity {
  string CorrelationID = 1; // идентификатор ссылки
  string ShortURL = 2; // сокращенный урл
}

//---------------- ссылки пользователя -------------------------------
// UserLinksRequest запрос всех ссылок пользователя
message UserLinksRequest {}

// UserLinksResponse ответ на запрос всех сокращенных ссылок пользователя
message UserLinksResponse {
  repeated UserLinksResponseEntity link = 2; // массив с данными по сокращенным ссылка пользователя
}

// UserLinksResponseEntity содержание записи ответа на запрос всех сокращенных ссылок пользователя
message UserLinksResponseEntity {
  string ShortURL = 1; // коротка ссылка
  string OriginalURL = 2; // оригинальный адрес
}


//---------------- удаление ссылок пользователя ----------------------
// DeleteUserLinksRequest запрос на удаление ссылок пользователя с токеном в контексте
message DeleteUserLinksRequest {
  repeated string Short = 2; // массив с хешами сокращенных ссылок
}

// DeleteUserLinksResponse ответ на запрос удаления ссылок пользователя
message DeleteUserLinksResponse {
  uint32 ResultCode = 1; // код результата операции
}


//---------------- статистика сервера -------------------------------
// InternalStatsRequest запрос статистики сервера
message InternalStatsRequest {}

// InternalStatusResponse ответ на запрос статистики сервера
message InternalStatsResponse {
  uint64 Urls = 1;
  uint64 Users = 2;
}

//---------------- проверка соединения с бд -------------------------
// DBPingRequest запрос проверки соединения с БД
message DBPingRequest {}

// DBPingResponse ответ на запрос проверки статуса БД
message DBPingResponse {
  uint32 ResultCode = 1; // код результата операции
}

//---------------- сервер -------------------------------------------
service GrpcShortener {
  rpc UserRegister(UserRegisterRequest) returns (UserRegisterResponse);
  rpc UserAuth(UserAuthRequest) returns (UserAuthResponse);
  rpc EncodeLink(EncodeLinkRequest) returns (EncodeLinkResponse);
  rpc BatchEncodeLink(EncodeBatchLinksRequest) returns (EncodeBatchLinksResponse);
  rpc UserLinks(UserLinksRequest) returns (UserLinksResponse);
  rpc DeleteUserLinks(DeleteUserLinksRequest) returns (DeleteUserLinksResponse);
  rpc InternalStats(InternalStatsRequest) returns (InternalStatsResponse);
  rpc DBPing(DBPingRequest) returns (DBPingResponse);
}